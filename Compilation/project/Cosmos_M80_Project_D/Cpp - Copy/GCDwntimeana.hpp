#if !defined _GCDWNTIMEANA_HPP_
#define _GCDWNTIMEANA_HPP_
#include "genifa.h"
#include "GWin.h"
#include "GCPanel.hpp"


class GCDwntimeana : public GCPanel
{
public:

	//{{CONTROL_ID
	enum {
		GBUTTON00067 = 67,
		GBUTTON00068 = 68,
		GBUTTON00069 = 69,
		GBUTTON00070 = 70,
		GBUTTON00071 = 71,
		GBUTTON00072 = 72,
		GBUTTON00073 = 73,
		GBUTTON00074 = 74,
		GBUTTON00075 = 75,
		GBUTTON00076 = 76,
		GBUTTON00077 = 77,
		GBUTTON00078 = 78,
		GBUTTON00081 = 81,
		GBUTTON00082 = 82,
		GBUTTON00083 = 83,
		GBUTTON00084 = 84,
		GBUTTON00085 = 85,
		GBUTTON00086 = 86,
		GBUTTON00087 = 87,
		GBUTTON00088 = 88,
		GBUTTON00089 = 89,
		GBUTTON00090 = 90,
		GLABEL00003 = 3,
		GLABEL00030 = 30,
		GLABEL00031 = 31,
		GLABEL00032 = 32,
		GLABEL00033 = 33,
		GLABEL00050 = 50,
		GLABEL00052 = 52,
		GLABEL00054 = 54,
		GLABEL00055 = 55,
		GLABEL00056 = 56,
		GLABEL00063 = 63,
		GLABEL00064 = 64,
		GLABEL00066 = 66,
		GLABEL00079 = 79,
		GNCDATATEXTBOX00034 = 34,
		GNCDATATEXTBOX00035 = 35,
		GNCDATATEXTBOX00051 = 51,
		GNCDATATEXTBOX00053 = 53,
		GNCDATATEXTBOX00057 = 57,
		GNCDATATEXTBOX00059 = 59,
		GNCDATATEXTBOX00061 = 61,
		GNCDATATEXTBOX00065 = 65,
		GNCDATATEXTBOX00080 = 80,
		GNXALARMMESSAGE00000 = 0,
		GNXMONITORSTATUS00002 = 2,
		GNXTIME00001 = 1,
		GPICTURE00005 = 5,
		GPICTURE00091 = 91,
		GPICTURE00092 = 92,
		GPICTURE00093 = 93,
		GPICTURE00094 = 94,
		GPICTURE00095 = 95,
		GPICTURE00096 = 96,
		GPICTURE00097 = 97,
		GSRECT00041 = 41,
		GTEXTBOX00004 = 4,
	};
	//}}CONTROL_ID

	//{{PUBLIC_METHOD
	GCDwntimeana();
	virtual ~GCDwntimeana();

	virtual short CreateChildren();
	virtual GPropertyInfo* GetPropertyInfo(const GBaseWindowProperty* pImport, unsigned short* pGPropertyInfoCnt);
	//}}PUBLIC_METHOD
	
	//{{CALLBACK_METHOD
	//}}CALLBACK_METHOD

protected:
	//{{PROTECTED_METHOD
	GCDefCBMP()
	//}}PROTECTED_METHOD
};

extern "C"{
void GCIDeleteGCDwntimeana( GBaseObject *pObject );
short GCINewGCDwntimeana( GBaseObject *pObject );
}
#endif /* _GCDWNTIMEANA_HPP_ */

